[
    {
        "evaluator_name": "EvaluatorJsonResponse",
        "model": "gemma-9b-ollama-l4",
        "letters": [
            "d",
            "w",
            "r",
            "s",
            "s",
            "p",
            "z",
            "w",
            "j",
            "b",
            "c",
            "h",
            "o",
            "u",
            "p",
            "i",
            "h",
            "u",
            "p",
            "j",
            "a",
            "h",
            "t",
            "u"
        ],
        "model_reply": "```json\n[\"ship\", \"wish\", \"show\", \"soup\", \"jump\", \"house\", \"which\", \"spout\", \"brush\", \"chair\", \"south\", \"whips\", \"jaws\", \"cheap\", \"proud\", \"switch\", \"schism\", \"chapter\"] \n```",
        "valid_words": [
            "ship",
            "wish",
            "show",
            "soup",
            "which",
            "spout",
            "brush",
            "chair",
            "south",
            "switch"
        ],
        "score": 10
    },
    {
        "evaluator_name": "EvaluatorJsonResponse",
        "model": "gemma-9b-ollama-l4",
        "letters": [
            "o",
            "f",
            "s",
            "l",
            "c",
            "j",
            "u",
            "k",
            "l",
            "i",
            "x",
            "q",
            "h",
            "h",
            "e",
            "k",
            "f",
            "j",
            "b",
            "p",
            "d",
            "t",
            "s",
            "d"
        ],
        "model_reply": "```json\n[\"house\", \"shelf\", \"flock\", \"jokes\", \"slice\", \"focus\", \"liquid\", \"shuffle\", \"juxtapose\", \"difficult\", \"flexible\", \"school\", \"clash\", \"pulse\", \"check\", \"slick\", \"fuels\", \"helps\", \"stuck\"] \n```",
        "valid_words": [
            "house",
            "shelf",
            "flock",
            "slice",
            "focus",
            "shuffle",
            "pulse",
            "slick",
            "stuck"
        ],
        "score": 9
    },
    {
        "evaluator_name": "EvaluatorJsonResponse",
        "model": "gemma-9b-ollama-l4",
        "letters": [
            "f",
            "c",
            "w",
            "y",
            "v",
            "h",
            "q",
            "b",
            "n",
            "a",
            "z",
            "h",
            "d",
            "c",
            "e",
            "l",
            "l",
            "m",
            "j",
            "q",
            "u",
            "q",
            "h",
            "c"
        ],
        "model_reply": "```json\n[\"whack\", \"which\", \"claim\", \"cheap\", \"check\", \"chuckle\", \"cycle\", \"fable\", \"face\", \"flame\", \"flow\", \"lunch\", \"match\", \"place\", \"queen\", \"whale\", \"whole\"] \n```",
        "valid_words": [
            "cycle",
            "fable",
            "face",
            "flame",
            "lunch",
            "whale"
        ],
        "score": 6
    },
    {
        "evaluator_name": "EvaluatorJsonResponse",
        "model": "gemma-9b-ollama-l4",
        "letters": [
            "c",
            "o",
            "p",
            "n",
            "j",
            "z",
            "d",
            "o",
            "p",
            "z",
            "g",
            "o",
            "o",
            "z",
            "z",
            "g",
            "k",
            "k",
            "c",
            "y",
            "d",
            "l",
            "n",
            "p"
        ],
        "model_reply": "```json\n[\"copy\", \"pond\", \"zoop\", \"clock\", \"cogon\", \"judo\", \"gondola\", \"polygon\", \"coding\", \"doping\", \"poodle\", \"zoology\"] \n```",
        "valid_words": [
            "copy",
            "pond",
            "clock",
            "cogon",
            "polygon",
            "zoology"
        ],
        "score": 6
    },
    {
        "evaluator_name": "EvaluatorJsonResponse",
        "model": "gemma-9b-ollama-l4",
        "letters": [
            "u",
            "f",
            "b",
            "m",
            "f",
            "d",
            "z",
            "q",
            "w",
            "s",
            "t",
            "j",
            "p",
            "g",
            "n",
            "i",
            "o",
            "z",
            "j",
            "c",
            "s",
            "o",
            "o",
            "z"
        ],
        "model_reply": "```json\n[\"focus\", \"stuff\", \"fudge\", \"jump\", \"quiz\", \"boost\", \"ghost\", \"jostle\", \"submit\", \"profit\", \"famous\", \"object\", \"music\", \"future\", \"doubt\", \"fight\", \"fluid\", \"funds\", \"impact\"] \n```",
        "valid_words": [
            "focus",
            "stuff",
            "jump",
            "quiz",
            "boost",
            "submit",
            "music",
            "doubt",
            "funds"
        ],
        "score": 9
    },
    {
        "evaluator_name": "EvaluatorJsonResponse",
        "model": "gemma-9b-ollama-l4",
        "letters": [
            "b",
            "c",
            "q",
            "d",
            "o",
            "b",
            "y",
            "y",
            "g",
            "i",
            "o",
            "y",
            "o",
            "i",
            "v",
            "e",
            "a",
            "k",
            "h",
            "t",
            "w",
            "o",
            "z",
            "w"
        ],
        "model_reply": "```json\n[\"boy\", \"toy\", \"go\", \"big\", \"coy\", \"woke\", \"body\", \"quiet\", \"video\", \"victory\", \"bowtie\", \"boggle\", \"habit\", \"wacky\", \"voice\"] \n```",
        "valid_words": [
            "boy",
            "toy",
            "go",
            "big",
            "coy",
            "woke",
            "body",
            "video",
            "habit",
            "wacky",
            "voice"
        ],
        "score": 11
    },
    {
        "evaluator_name": "EvaluatorJsonResponse",
        "model": "gemma-9b-ollama-l4",
        "letters": [
            "x",
            "t",
            "g",
            "m",
            "c",
            "y",
            "e",
            "v",
            "q",
            "f",
            "b",
            "i",
            "k",
            "y",
            "b",
            "c",
            "t",
            "e",
            "c",
            "g",
            "a",
            "j",
            "e",
            "x"
        ],
        "model_reply": "```json\n[\"text\", \"gate\", \"exit\", \"cycle\", \"betty\", \"magic\", \"ticket\", \"active\", \"geometry\", \"victory\", \"expect\", \"jacket\", \"bicycle\", \"category\"] \n```",
        "valid_words": [
            "text",
            "gate",
            "exit",
            "betty",
            "magic",
            "ticket",
            "active",
            "jacket"
        ],
        "score": 8
    },
    {
        "evaluator_name": "EvaluatorJsonResponse",
        "model": "gemma-9b-ollama-l4",
        "letters": [
            "j",
            "x",
            "m",
            "s",
            "v",
            "h",
            "f",
            "y",
            "i",
            "c",
            "r",
            "i",
            "a",
            "h",
            "o",
            "i",
            "x",
            "u",
            "k",
            "f",
            "e",
            "e",
            "j",
            "m"
        ],
        "model_reply": "```json\n[\"mix\", \"fix\", \"him\", \"his\", \"six\", \"fish\", \"rich\", \"chair\", \"voice\", \"magic\", \"famic\", \"jiffy\", \"chimer\", \"vicar\", \"harmful\", \"sacrifice\"] \n```",
        "valid_words": [
            "mix",
            "fix",
            "him",
            "his",
            "six",
            "fish",
            "rich",
            "chair",
            "voice",
            "jiffy",
            "chimer",
            "vicar"
        ],
        "score": 12
    },
    {
        "evaluator_name": "EvaluatorJsonResponse",
        "model": "gemma-9b-ollama-l4",
        "letters": [
            "j",
            "z",
            "v",
            "w",
            "q",
            "j",
            "q",
            "p",
            "q",
            "r",
            "n",
            "w",
            "h",
            "e",
            "p",
            "q",
            "r",
            "j",
            "u",
            "j",
            "e",
            "n",
            "u",
            "x"
        ],
        "model_reply": "```json\n[\"queen\", \"where\", \"wren\", \"jump\", \"queue\", \"prune\", \"junque\", \"hew\", \"pure\", \"quench\", \"rejoin\", \"unjerk\", \"perjure\", \"jejune\"] \n```",
        "valid_words": [
            "queen",
            "where",
            "wren",
            "queue",
            "prune",
            "hew",
            "pure",
            "perjure",
            "jejune"
        ],
        "score": 9
    },
    {
        "evaluator_name": "EvaluatorJsonResponse",
        "model": "gemma-9b-ollama-l4",
        "letters": [
            "p",
            "m",
            "e",
            "d",
            "p",
            "l",
            "s",
            "h",
            "t",
            "x",
            "p",
            "m",
            "y",
            "k",
            "n",
            "t",
            "s",
            "v",
            "g",
            "t",
            "w",
            "c",
            "y",
            "s"
        ],
        "model_reply": "```json\n[\"temple\", \"spelt\", \"plants\", \"sleeps\", \"empty\", \"pests\", \"helps\", \"stream\", \"system\", \"plump\", \"melt\", \"kept\", \"spent\", \"types\", \"smile\", \"stomp\", \"speed\", \"symptom\", \"complex\"] \n```",
        "valid_words": [
            "spelt",
            "empty",
            "system",
            "melt",
            "kept",
            "spent"
        ],
        "score": 6
    },
    {
        "evaluator_name": "EvaluatorNewLinePerWord",
        "model": "gemma-9b-ollama-l4",
        "letters": [
            "d",
            "w",
            "r",
            "s",
            "s",
            "p",
            "z",
            "w",
            "j",
            "b",
            "c",
            "h",
            "o",
            "u",
            "p",
            "i",
            "h",
            "u",
            "p",
            "j",
            "a",
            "h",
            "t",
            "u"
        ],
        "model_reply": "<response>\nship\nwish\nshow\nhouse\nsouth\nbrush\njump\nwhich\nspout\nwhips\njaws\nchips\nhours\nswitch\nupward\npurchase\ndisrupt \n\n\n</response> \n",
        "valid_words": [
            "ship",
            "wish",
            "show",
            "south",
            "brush",
            "which",
            "spout",
            "chips",
            "switch",
            "upward",
            "disrupt"
        ],
        "score": 11
    },
    {
        "evaluator_name": "EvaluatorNewLinePerWord",
        "model": "gemma-9b-ollama-l4",
        "letters": [
            "o",
            "f",
            "s",
            "l",
            "c",
            "j",
            "u",
            "k",
            "l",
            "i",
            "x",
            "q",
            "h",
            "h",
            "e",
            "k",
            "f",
            "j",
            "b",
            "p",
            "d",
            "t",
            "s",
            "d"
        ],
        "model_reply": "<response>\nhouse\nshelf\nflock\njokes\nslice\nfocus\nliquid\nshuffle\nschool\njumble\nclash\nhelps\ncheck\nsleep\nstuck\njuice\nslick\nflash\ndesk \n </response>  \n\n\nLet me know if you'd like me to try finding more words! \ud83d\ude0a \n",
        "valid_words": [
            "house",
            "shelf",
            "flock",
            "slice",
            "focus",
            "shuffle",
            "stuck",
            "juice",
            "slick",
            "desk"
        ],
        "score": 10
    },
    {
        "evaluator_name": "EvaluatorNewLinePerWord",
        "model": "gemma-9b-ollama-l4",
        "letters": [
            "f",
            "c",
            "w",
            "y",
            "v",
            "h",
            "q",
            "b",
            "n",
            "a",
            "z",
            "h",
            "d",
            "c",
            "e",
            "l",
            "l",
            "m",
            "j",
            "q",
            "u",
            "q",
            "h",
            "c"
        ],
        "model_reply": "<response>\nface\nwhale\ncheap\nlunch\nclaim\nheavy\nwhich\ncalm\ncheck\ncycle\nfable\nchuckle\nwhack\nblank\nflaky\nhacked\n \n</response>  \n\n\nLet me know if you'd like me to try finding more words! \ud83d\ude0a \n",
        "valid_words": [
            "face",
            "whale",
            "lunch",
            "heavy",
            "calm",
            "cycle",
            "fable"
        ],
        "score": 7
    },
    {
        "evaluator_name": "EvaluatorNewLinePerWord",
        "model": "gemma-9b-ollama-l4",
        "letters": [
            "c",
            "o",
            "p",
            "n",
            "j",
            "z",
            "d",
            "o",
            "p",
            "z",
            "g",
            "o",
            "o",
            "z",
            "z",
            "g",
            "k",
            "k",
            "c",
            "y",
            "d",
            "l",
            "n",
            "p"
        ],
        "model_reply": "<response>\npond\ncopy\nzoo\ngone\ndock\nloop\nzoop\ncogon\njudo\nclock\npolygon\ncoding\ndongo\npock \n </response> \n\n\nLet me know if you'd like me to try finding more words!  It gets trickier the longer they are. \ud83d\ude0a \n",
        "valid_words": [
            "pond",
            "copy",
            "zoo",
            "dock",
            "loop",
            "cogon",
            "clock",
            "polygon",
            "pock"
        ],
        "score": 9
    },
    {
        "evaluator_name": "EvaluatorNewLinePerWord",
        "model": "gemma-9b-ollama-l4",
        "letters": [
            "u",
            "f",
            "b",
            "m",
            "f",
            "d",
            "z",
            "q",
            "w",
            "s",
            "t",
            "j",
            "p",
            "g",
            "n",
            "i",
            "o",
            "z",
            "j",
            "c",
            "s",
            "o",
            "o",
            "z"
        ],
        "model_reply": "<response>\nfocus\nstuff\njump\nquiz\nboost\nfudge\njostle\nfamous\nobjects\nprofits\ndisgust \n </response> \n\n\nLet me know if you'd like me to try finding more words!  It gets trickier the longer they are. \ud83d\ude0a \n",
        "valid_words": [
            "focus",
            "stuff",
            "jump",
            "quiz",
            "boost",
            "disgust"
        ],
        "score": 6
    },
    {
        "evaluator_name": "EvaluatorNewLinePerWord",
        "model": "gemma-9b-ollama-l4",
        "letters": [
            "b",
            "c",
            "q",
            "d",
            "o",
            "b",
            "y",
            "y",
            "g",
            "i",
            "o",
            "y",
            "o",
            "i",
            "v",
            "e",
            "a",
            "k",
            "h",
            "t",
            "w",
            "o",
            "z",
            "w"
        ],
        "model_reply": "<response>\nboy\ngo\nbig\ntoy\nwoke\nvoice\nquiet\nbody\nvictory\ntoday\nbowtie\nwacky\nboggle\ncoyote\nhabit\n \n</response>  \n\n\nLet me know if you'd like me to try finding more words! \ud83d\ude0a \n",
        "valid_words": [
            "boy",
            "go",
            "big",
            "toy",
            "woke",
            "voice",
            "body",
            "today",
            "wacky",
            "coyote",
            "habit"
        ],
        "score": 11
    },
    {
        "evaluator_name": "EvaluatorNewLinePerWord",
        "model": "gemma-9b-ollama-l4",
        "letters": [
            "x",
            "t",
            "g",
            "m",
            "c",
            "y",
            "e",
            "v",
            "q",
            "f",
            "b",
            "i",
            "k",
            "y",
            "b",
            "c",
            "t",
            "e",
            "c",
            "g",
            "a",
            "j",
            "e",
            "x"
        ],
        "model_reply": "<response>\ntext\nget\nbet\ncite\nback\nbyte\nexit\nexact\ncycle\nmagic\nticket\ngeometry\nexample\nactive\njacket \n </response>  \n\n\nLet me know if you'd like me to try finding more words! \ud83d\ude0a \n",
        "valid_words": [
            "text",
            "get",
            "bet",
            "cite",
            "back",
            "exit",
            "exact",
            "magic",
            "ticket",
            "active",
            "jacket"
        ],
        "score": 11
    },
    {
        "evaluator_name": "EvaluatorNewLinePerWord",
        "model": "gemma-9b-ollama-l4",
        "letters": [
            "j",
            "x",
            "m",
            "s",
            "v",
            "h",
            "f",
            "y",
            "i",
            "c",
            "r",
            "i",
            "a",
            "h",
            "o",
            "i",
            "x",
            "u",
            "k",
            "f",
            "e",
            "e",
            "j",
            "m"
        ],
        "model_reply": "<response>\nmix\nfix\nhim\nsix\nrich\nchair\nvoice\nfray\nharm\njiffy\nmagic\nhistory\nfiction\n \n</response> \n\n\nLet me know if you'd like me to try finding more words!  It gets trickier the longer they are. \ud83d\ude0a \n",
        "valid_words": [
            "mix",
            "fix",
            "him",
            "six",
            "rich",
            "chair",
            "voice",
            "fray",
            "harm",
            "jiffy"
        ],
        "score": 10
    },
    {
        "evaluator_name": "EvaluatorNewLinePerWord",
        "model": "gemma-9b-ollama-l4",
        "letters": [
            "j",
            "z",
            "v",
            "w",
            "q",
            "j",
            "q",
            "p",
            "q",
            "r",
            "n",
            "w",
            "h",
            "e",
            "p",
            "q",
            "r",
            "j",
            "u",
            "j",
            "e",
            "n",
            "u",
            "x"
        ],
        "model_reply": "<response>\nqueen\nwhere\nwren\njump\nqueue\njunque\nhew\npure\nprune\nquench\nunripe\nperjure\nrejoin\njejune\n</response> \n\n\nLet me know if you'd like me to try finding more words!  It gets trickier with the unusual letter combinations. \ud83d\ude0a \n",
        "valid_words": [
            "queen",
            "where",
            "wren",
            "queue",
            "hew",
            "pure",
            "prune",
            "perjure",
            "jejune"
        ],
        "score": 9
    },
    {
        "evaluator_name": "EvaluatorNewLinePerWord",
        "model": "gemma-9b-ollama-l4",
        "letters": [
            "p",
            "m",
            "e",
            "d",
            "p",
            "l",
            "s",
            "h",
            "t",
            "x",
            "p",
            "m",
            "y",
            "k",
            "n",
            "t",
            "s",
            "v",
            "g",
            "t",
            "w",
            "c",
            "y",
            "s"
        ],
        "model_reply": "<response>\ntemple\nspelt\nstems\nsleep\nempty\nplants\nsymptom\nplaylist\ncomplex\nmelt\ntest\nplay\nkept\nsent\nlist\nstep\nmyth\nspy\ngym \n</response>  \n\n\nLet me know if you'd like me to try finding more words! \ud83d\ude0a \n",
        "valid_words": [
            "spelt",
            "empty",
            "melt",
            "test",
            "kept",
            "sent",
            "step",
            "myth",
            "spy",
            "gym"
        ],
        "score": 10
    }
]